description: BayesSearchCV
cross_validation_type: <class 'skopt.searchcv.BayesSearchCV'>
higher_score_is_better: true
number_of_splits: 5
score_names:
- roc_auc
parameter_names:
- model
- model__C
- model__max_features
- model__max_depth
- model__n_estimators
- model__min_samples_split
- model__min_samples_leaf
- model__max_samples
- model__criterion
- prep__numeric__imputer__transformer
- prep__numeric__scaler__transformer
- prep__numeric__pca__transformer
- prep__non_numeric__encoder__transformer
parameter_names_mapping:
  model: model
  model__C: C
  model__max_features: max_features
  model__max_depth: max_depth
  model__n_estimators: n_estimators
  model__min_samples_split: min_samples_split
  model__min_samples_leaf: min_samples_leaf
  model__max_samples: max_samples
  model__criterion: criterion
  prep__numeric__imputer__transformer: imputer
  prep__numeric__scaler__transformer: scaler
  prep__numeric__pca__transformer: pca
  prep__non_numeric__encoder__transformer: encoder
test_score_rankings:
  roc_auc:
  - 7
  - 8
  - 6
  - 3
  - 1
  - 5
  - 4
  - 2
test_score_averages:
  roc_auc:
  - 0.7263932822687875
  - 0.7125537018798377
  - 0.7472597283679335
  - 0.76323441451448
  - 0.7694326636066091
  - 0.7559746071437641
  - 0.7619686404219917
  - 0.7694147954950765
test_score_standard_deviations:
  roc_auc:
  - 0.023291543837312304
  - 0.03248025183321265
  - 0.026865708184857767
  - 0.030945693431885097
  - 0.03559567616926711
  - 0.03726910221168724
  - 0.03353013207921065
  - 0.043856276634919256
trials:
- model: LogisticRegression()
  model__C: 2.3712235042499274e-05
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__pca__transformer: PCA('mle')
  prep__numeric__scaler__transformer: StandardScaler()
- model: LogisticRegression()
  model__C: 0.0031932541960563612
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='median')
  prep__numeric__pca__transformer: PCA('mle')
  prep__numeric__scaler__transformer: MinMaxScaler()
- model: LogisticRegression()
  model__C: 32.730896501169475
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__pca__transformer: PCA('mle')
  prep__numeric__scaler__transformer: StandardScaler()
- model: LogisticRegression()
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__pca__transformer: None
  prep__numeric__scaler__transformer: StandardScaler()
- model: RandomForestClassifier()
  model__criterion: gini
  model__max_depth: 50
  model__max_features: 0.797397050836895
  model__max_samples: 0.6620299911421869
  model__min_samples_leaf: 4
  model__min_samples_split: 29
  model__n_estimators: 539
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__pca__transformer: None
  prep__numeric__scaler__transformer: None
- model: RandomForestClassifier()
  model__criterion: gini
  model__max_depth: 87
  model__max_features: 0.4008718223246863
  model__max_samples: 0.6905323823987464
  model__min_samples_leaf: 11
  model__min_samples_split: 2
  model__n_estimators: 1056
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__pca__transformer: PCA('mle')
  prep__numeric__scaler__transformer: None
- model: RandomForestClassifier()
  model__criterion: gini
  model__max_depth: 74
  model__max_features: 0.2492810023922022
  model__max_samples: 0.7893321681141925
  model__min_samples_leaf: 14
  model__min_samples_split: 17
  model__n_estimators: 729
  prep__non_numeric__encoder__transformer: CustomOrdinalEncoder()
  prep__numeric__imputer__transformer: SimpleImputer(strategy='most_frequent')
  prep__numeric__pca__transformer: PCA('mle')
  prep__numeric__scaler__transformer: None
- model: RandomForestClassifier()
  prep__non_numeric__encoder__transformer: OneHotEncoder()
  prep__numeric__imputer__transformer: SimpleImputer()
  prep__numeric__pca__transformer: None
  prep__numeric__scaler__transformer: None
timings:
  fit time averages:
  - 0.01757535934448242
  - 0.015443944931030273
  - 0.024297189712524415
  - 0.014040040969848632
  - 0.6263494968414307
  - 0.8946394443511962
  - 0.5324744701385498
  - 0.4249551773071289
  fit time standard deviations:
  - 0.009837731635230485
  - 0.0019718934737297466
  - 0.006460748645288417
  - 0.0017760329527326758
  - 0.005231658380786361
  - 0.004444275742346367
  - 0.006855155799540288
  - 0.010898214556928987
  score time averages:
  - 0.007174444198608398
  - 0.005509567260742187
  - 0.003247833251953125
  - 0.0031080722808837892
  - 0.02701578140258789
  - 0.053702926635742186
  - 0.03627233505249024
  - 0.030524444580078126
  score time standard deviations:
  - 0.002629688130617531
  - 0.0011709086531956733
  - 0.00046959509698691644
  - 7.893770919593022e-05
  - 0.0022393495907684817
  - 0.00230491604260773
  - 0.005676490197135316
  - 0.005407351212076841
